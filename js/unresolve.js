{ statement: 'selection_statement$?', -->1
  declaration: 'statement',
  iteration_statement: 'statement',
  selection_statement: 'statement', -->3
  expression_statement: 'statement',
  compound_statement: 'statement',
  'compound_statement$c_AbmZSf': 'compound_statement',
  'statement_list$+': 'statement_list',
  'selection_statement$?': 'selection_statement', -->2
  'expression$*': 'expression$*',
  equality_expression: 'assignment_expression',
  assignment_expression: 'initializer',
  'equality_expression$*': 'equality_expression$*',
  'relational_expression$*': 'relational_expression$*',
  'additive_expression$*': 'additive_expression$*',
  'multiplicative_expression$*': 'multiplicative_expression$*',
  unary_expression: 'multiplicative_expression$*$|_jVGkWO',
  postfix_expression: 'unary_expression',
  'postfix_expression$*': 'postfix_expression$*',
  constant: 'primary_expression',
  'init_declarator_list$*': 'init_declarator_list$*',
  'init_declarator$?': 'init_declarator',
  'declarator$*': 'declarator$*',
  'statement_list$+$*': 'statement_list$+$*',
  relational_expression: 'equality_expression$*$|_lqpnFq',
  multiplicative_expression: 'additive_expression$*$|_QnTqVU',
  initializer: 'init_declarator$?',
  constant_expression: 'declarator$*$?' }
